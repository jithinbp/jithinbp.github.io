# ****************************************************************
# WaveDemo_x743 Configuration File
# ****************************************************************

# ----------------------------------------------------------------
# Board Connection Parameters
# ----------------------------------------------------------------
[CONNECTIONS]

# OPEN <N>: open the digitizer
# options: USB 0 0                  Desktop/NIM digitizer through USB (direct to USB)
#          USB 0 BA                 VME digitizer through USB-V1718/V3718 (BA = BaseAddress of the VME board, 32 bit hex)
#          PCI 0 0 0                Desktop/NIM/VME through CONET (optical link) 
#          PCI 0 0 BA               VME digitizer through V2718/V3718 (BA = BaseAddress of the VME board, 32 bit hex) 
#          USB_A4818 X 0 0          Desktop/NIM digitizer through USB->A4818->CONET (X is the PID (product id) of A4818)
#          USB_A4818_V2718 X 0 BA   VME digitizer through USB-A4818-V2718 (BA = BaseAddress of the VME board, 32 bit hex) (X is the PID (product id) of A4818)
#          USB_A4818_V3718 X 0 BA   VME digitizer through USB-A4818-V3718 (BA = BaseAddress of the VME board, 32 bit hex) (X is the PID (product id) of A4818)
#          USB_A4818_V4718 X 0 BA   VME digitizer through USB-A4818-V4718 (BA = BaseAddress of the VME board, 32 bit hex) (X is the PID (product id) of A4818)
#          ETH_V4718 IP 0 BA        VME digitizer through ETH-V4718 (BA = BaseAddress of the VME board, 32 bit hex) (IP is the IP Address of the V4718)
#          USB_V4718 X 0 BA         VME digitizer through USB-V4718 (BA = BaseAddress of the VME board, 32 bit hex) (X is the PID (product id) of V4718)
#
# for multiple boards, OPEN 0 indicates the master board

# example for using two VME digitizer through USB-V1718 (uncomment the two lines below)
#OPEN 0 = USB 0 32110000
#OPEN 1 = USB 0 32100000

# example for using two VME digitizer through ETH-V4718 (uncomment the two lines below)
#OPEN 0 = ETH_V4718 192.168.1.254 0 32110000
#OPEN 1 = ETH_V4718 192.168.1.254 0 32100000

# examples for using one digitizer (uncomment just one of the lines below)
OPEN 0 = USB 0 0
#OPEN 0 = USB 0 32100000
#OPEN 0 = PCI 0 0 0
#OPEN 0 = PCI 0 0 32100000
#OPEN 0 = ETH_V4718 192.168.1.254 0 32100000
#OPEN 0 = USB_V4718 12345 0 32100000
#OPEN 0 = USB_A4818 12345 0 0 
#OPEN 0 = USB_A4818_V2718 12345 0 32100000


# ----------------------------------------------------------------
# Program options
# ----------------------------------------------------------------
[OPTIONS]

# GNUPLOT_PATH: path to gnuplot executable file (optional if it is already in environment variables)
GNUPLOT_PATH = /usr/bin/

# DATAFILE_PATH: path to save output file (the folder will be created if it does not exist)
DATAFILE_PATH = ./data_output/

# SAVE_RAW_DATA: enable/disable raw data file saving
SAVE_RAW_DATA = NO
# SAVE_TDC_LIST: enable/disable saving of the Trigger Time Tag list
SAVE_TDC_LIST = YES
# SAVE_WAVEFORM: enable/disable waveform file saving (of filtered events)
SAVE_WAVEFORM = NO
# SAVE_ENERGY_HISTOGRAM: enable/disable file saving with energy histogram
SAVE_ENERGY_HISTOGRAM = YES
# SAVE_TIME_HISTOGRAM: enable/disable file saving with time histogram
SAVE_TIME_HISTOGRAM = NO
# SAVE_LISTS: enable/disable list file saving (of filtered events)
SAVE_LISTS = NO
# SAVE_RUN_INFO: enable run info file saving
SAVE_RUN_INFO = NO

# OUTPUT_FILE_FORMAT: output file can be either ASCII or binary (raw data files are always binary)
# options: BINARY, ASCII
OUTPUT_FILE_FORMAT = ASCII

# OUTPUT_FILE_HEADER: if enabled, the header is included in the output file data
# options: YES, NO
OUTPUT_FILE_HEADER = YES

# OUTPUT_FILE_TIMESTAMP_UNIT: unit for the time stamps in the output list files
# options: 0=ps, 1=ns, 2=us, 3=ms, 4=s
OUTPUT_FILE_TIMESTAMP_UNIT = 1 

# STATS_ENABLE: enable/disable updating and printing statistics while acquisition
# options: YES, NO
STATS_RUN_ENABLE = YES
# PLOT_ENABLE: enable/disable waveform plotting when the run starts
# options: YES, NO
PLOT_RUN_ENABLE = YES

# DGTZ_RESET: specify if the boards are reset before their programming
# options: YES, NO
DGTZ_RESET = YES

# SYNC_ENABLE: enable for working with multiple boards synchronized 
# options: YES, NO (N.B.: if enabled you must use TRIGGER_TYPE = EXTERN)
SYNC_ENABLE = NO

# TRIGGER_FIXED: fix the trigger of the reference channel in percent of the whole acquisition window
# values: 10 to 90 (%) (default = 20)
TRIGGER_FIXED = 20

# BOARD_REF: Board to which the CHANNEL_REF belongs
BOARD_REF = 0
# CHANNEL_REF: Channel used as a start in the TOF measurements
CHANNEL_REF = 0

##                    ##
### Histogram options ##
##                    ##

# ENERGY_H_NBIN: Number of bins in the energy histogram
# values: 1K, 2K, 4K, 8K, 16K
ENERGY_H_NBIN = 4K

# TIME_H_NBIN: Number of bins in the time histogram
# values: 256, 512, 1K, 2K, 4K, 8K, 16K
TIME_H_NBIN = 1K

# TIME_H_MODE: Time histogram mode
# options: START_STOP (time from a common reference channel), INTERVALS (time between consecutive events)
TIME_H_MODE = START_STOP

# TIME_H_MIN: Lower time value used to make time histogram (in ns)
TIME_H_MIN = -16
# TIME_H_MAX: Upper time value used to make time histogram (in ns)
TIME_H_MAX = 16


# ----------------------------------------------------------------
# Common Setting (applied to all channels as default value)
# ----------------------------------------------------------------
[COMMON]

# INPUT_ENABLE: all channels can be enable/disable by default (can be individually enable/disable in [BOARD x - CHANNEL n] sections)
# options: YES, NO
INPUT_ENABLE = NO

# SAMPLING_FREQUENCY
# options: 0 = 3.2 GHz, 1 = 1.6 GHz, 2 = 800 MHz, 3 = 400 MHz
SAMPLING_FREQUENCY = 3

# INL_CORRECTION_ENABLE: enable the Integral Non Linearity correction for the acquired data
# options: YES, NO
INL_CORRECTION_ENABLE = YES

# TRIGGER_TYPE
# options: SOFTWARE (trigger  command  is generated  by  the  software),
#          NORMAL (the signals will be recorded in the enabled channels upon the channel self trigger capability), 
#          EXTERNAL (trigger only on signals received from TRG-IN input),
#          ADVANCED (allows separate settings, see EXTERNAL_TRIGGER, SOFTWARE_TRIGGER and CHANNEL_SELF_TRIGGER)
#TRIGGER_TYPE = EXTERNAL
TRIGGER_TYPE = NORMAL

# EXTERNAL_TRIGGER: external trigger input settings.
# SOFTWARE_TRIGGER: software trigger settings.
# CHANNEL_SELF_TRIGGER: channel auto trigger settings.
# When enabled, the specific trigger can be either propagated (ACQUISITION_AND_TRGOUT / TRGOUT_ONLY) or not (ACQUISITION_ONLY) through the TRGOUT
# options: DISABLED, ACQUISITION_ONLY, ACQUISITION_AND_TRGOUT, TRGOUT_ONLY
# These settings work if TRIGGER_TYPE is set on ADVANCED.
#EXTERNAL_TRIGGER = ACQUISITION_ONLY
#SOFTWARE_TRIGGER = ACQUISITION_ONLY
#CHANNEL_SELF_TRIGGER = ACQUISITION_ONLY

# CHANNEL_TRIGGER_ENABLE: channel auto trigger settings. (can be individually enable/disable in [BOARD x - CHANNEL n] sections)
# options: YES, NO
CHANNEL_TRIGGER_ENABLE = YES

# RECORD_LENGTH = number of samples in the acquisition window
# values: multiple of 16 (min = 16, max = 1024)
RECORD_LENGTH = 1024

# POST_TRIGGER: delay added to the trigger in the front-end FPGA before the acquisition is stopped. Units are in periods of the SAMLONG chips write clock (see V1743 userl Manual).
# values: 1 to 255 
POST_TRIGGER = 20

# TRIGGER_EDGE: decides whether the trigger occurs on the rising or falling edge of the signal
# options: RISING, FALLING
TRIGGER_EDGE = RISING

# TRIGGER_THRESHOLD: threshold for the channel auto trigger
# value: between -1.25 V and 1.25 V
TRIGGER_THRESHOLD = 0.1

# PULSE_POLARITY: input signal polarity
# options: POSITIVE, NEGATIVE
PULSE_POLARITY = POSITIVE

# FPIO_LEVEL: type of the front panel I/O LEMO connectors 
# options: NIM, TTL
FPIO_LEVEL =  NIM

# DC_OFFSET: DC offset adjust (DAC channel setting)
# value: between -1.25 V and 1.25 V
DC_OFFSET = 0

##                               ##
### Waveforms processing options ##
##                               ##

# GATE_WIDTH: gate width (in ns)
GATE_WIDTH = 150

# PRE_GATE: portion of the gate before the trigger (in ns)
PRE_GATE = 10

# NS_BASELINE: Number of Samples for the input baseline calculation
NS_BASELINE = 15

# DISCR_MODE: Discriminator mode
# options: LED, CFD
DISCR_MODE = CFD

# CFD_DELAY: CFD delay (in ns)
CFD_DELAY = 40

# CFD_ATTEN: CFD attenuation
# value: between 0.0 and 1.0
CFD_ATTEN = 0.2

# TTF_SMOOTHING: smoothing
# options: 0 = disabled, 1, 2, 3, 4 => 2, 4, 8, 16 samples
TTF_SMOOTHING = 0

##                 ##
### Register write ##
##                 ##

# WRITE_REGISTER: generic write register access. This command allows the user to have a direct write access to the
# registers of the board. NOTE: all the direct write accesses are executed before the other setting, thus it might
# happen that one specific setting overwrites the register content.
# Syntax: WRITE_REGISTER ADDRESS DATA, where ADDRESS is the address offset of the register (16 bit hex)
# and DATA is the value being written (31 bit hex)
# Example: WRITE_REGISTER  1080  00000010  # Set the threshold of channel 0 to 16 ADC counts (hex 10)
#  WRITE_REGISTER  8168  8  
#WRITE_REGISTER = 8100 FFFFFFFB 4


# ----------------------------------------------------------------
# Individual Settings 
# ----------------------------------------------------------------
# The following setting are usually applied on channel by channel
# basis; however, you can put them also in the [COMMON] section in
# order to apply them to all channels.
# [BOARD N]: options in this section are applies at all channel of the board N (it can overwrite the same option in [COMMON])
# [BOARD N  - CHANNEL M]: option are applies at channel M of the board N (it can override the same option in [BOARD N])
# ----------------------------------------------------------------

# INPUT_ENABLE: enable/disable one channel
# options: YES, NO

# CHANNEL_TRIGGER_ENABLE: channel auto trigger settings.
# options: YES, NO

# DC_OFFSET: DC offset adjust
# value: between -1.25 V and 1.25 V

# TRIGGER_THRESHOLD: threshold for the channel auto trigger
# value: between -1.25 V and 1.25 V

# TRIGGER_EDGE: decides whether the trigger occurs on the rising or falling edge of the signal
# options: RISING, FALLING

# PULSE_POLARITY: input signal polarity
# options: POSITIVE, NEGATIVE


[BOARD 0]
INPUT_ENABLE = NO

[BOARD 0 - CHANNEL 0]
INPUT_ENABLE = YES
DC_OFFSET = 0
TRIGGER_EDGE = RISING
PULSE_POLARITY = POSITIVE
TRIGGER_THRESHOLD = 0.1

[BOARD 0 - CHANNEL 1]
INPUT_ENABLE = NO
DC_OFFSET = 0
TRIGGER_EDGE = RISING
PULSE_POLARITY = POSITIVE
TRIGGER_THRESHOLD = +0.2
[BOARD 0 - CHANNEL 2]
INPUT_ENABLE = NO
[BOARD 0 - CHANNEL 3]
INPUT_ENABLE = NO


[BOARD 1]
INPUT_ENABLE = NO
[BOARD 1 - CHANNEL 0]
INPUT_ENABLE = NO
